#!/usr/bin/env bash

# set -eux

echo "Initial Setup"
export BASELOC=$PWD
export COSMO=$BASELOC/cosmopolitan
export COSMOS=$BASELOC/cosmos
export RESULTS=$BASELOC/bin

mkdir -p $COSMOS
cd $COSMOS
mkdir -p include bin lib libexec share
cd $BASELOC

echo "Compiling Cosmopolitan Libc"
# https://github.com/jart/cosmopolitan/commit/6843150e0c6322f50cda0ce59cca0b2e7397a3a7
git clone https://github.com/jart/cosmopolitan --depth=1

cd $COSMO
pwd
make -j4 toolchain
make -j4 o//third_party/zlib
make -j4 o//third_party/zlib/gz
make -j4 o//third_party/zstd
make -j4 o//tool/build/zipcopy.com
make -j4 o//third_party/zip
make -j4 o//third_party/unzip

echo "Setting up cosmocc"

export CC=$COSMO/tool/scripts/cosmocc
export CXX=$COSMO/tool/scripts/cosmoc++
export LD=$COSMO/tool/scripts/cosmoc++
export AR=$COSMO/o/third_party/gcc/bin/x86_64-linux-musl-ar
export OBJCOPY=$COSMO/o/third_party/gcc/bin/x86_64-linux-musl-objcopy
export ZIPCOPY=$COSMO/o/tool/build/zipcopy.com
export ZIP=$COSMO/o/third_party/zip/zip.com

cd $BASELOC
$CC sample.c -o sample.com
./sample.com

echo "Setting up libz and libzstd in $COSMOS"
cd $COSMOS

cp $COSMO/o/third_party/zstd/zstd.a ./lib/libzstd.a
echo '#include "third_party/zstd/zstd.h"' >> ./include/zstd.h

cp $COSMO/o/third_party/zlib/zlib.a ./lib/libz.a
$AR rc ./lib/libz.a $COSMO/o/third_party/zlib/gz/*.o
echo '#include "third_party/zlib/zlib.h"' >> ./include/zlib.h

echo "building musl-cross-make"
cd $BASELOC
cp cosmo-ci.mak config.mak
make -j4

echo "installing musl-cross-make"
make install -j4 -i

echo "creating actually portable executables"

dbgcopy () {
    FILE="$1"
    f="$(basename -- $FILE)"
    f2="${f#x86_64-linux-musl-}"
    cp "$FILE" "$RESULTS/$f2.com.dbg"
}

mkdir -p $RESULTS
for FILE0 in $(ls $COSMOS/bin/*); do
    dbgcopy "$FILE0"
done

dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/install-tools/fixincl
dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/cc1
dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/cc1plus
dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/collect2
dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/lto-wrapper
dbgcopy $COSMOS/libexec/gcc/x86_64-linux-musl/11.2.0/g++-mapper-server

cd $RESULTS
for FILE in $(ls ./*.com.dbg); do
   APE="${FILE%.*}"
   $OBJCOPY -SO binary "$FILE" "$APE"
   $ZIPCOPY "$FILE" "$APE"
done

echo "zip file with actually portable executables"
cd $BASELOC
ZFILE=gcc11.zip
find ./bin -name '*.com' -print0 | xargs -0 zip "$ZFILE"

echo "second zip file with dbg"
cd $BASELOC
ZFILE=gcc11-dbg.zip
find ./bin -maxdepth 1 -name '*.com*' -print0 | xargs -0 zip "$ZFILE"

echo "DONE."
cd $BASELOC
ls -al gcc11*.zip
